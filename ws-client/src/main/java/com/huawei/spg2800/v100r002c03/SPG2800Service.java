package com.huawei.spg2800.v100r002c03;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 2.6.1
 * 2012-08-22T22:55:38.325-04:00
 * Generated source version: 2.6.1
 * 
 */
@WebServiceClient(name = "SPG2800Service", 
                  wsdlLocation = "file:/C:/codebase/BlueDiamond/SOAPClient/ws-client/src/main/resources/spg_service.wsdl",
                  targetNamespace = "http://www.huawei.com/SPG2800/V100R002C03") 
public class SPG2800Service extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://www.huawei.com/SPG2800/V100R002C03", "SPG2800Service");
    public final static QName SPG2800Port = new QName("http://www.huawei.com/SPG2800/V100R002C03", "SPG2800Port");
    static {
        URL url = null;
        try {
            url = new URL("file:/C:/codebase/BlueDiamond/SOAPClient/ws-client/src/main/resources/spg_service.wsdl");
        } catch (MalformedURLException e) {
            java.util.logging.Logger.getLogger(SPG2800Service.class.getName())
                .log(java.util.logging.Level.INFO, 
                     "Can not initialize the default wsdl from {0}", "file:/C:/codebase/BlueDiamond/SOAPClient/ws-client/src/main/resources/spg_service.wsdl");
        }
        WSDL_LOCATION = url;
    }

    public SPG2800Service(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public SPG2800Service(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public SPG2800Service() {
        super(WSDL_LOCATION, SERVICE);
    }
    

    /**
     *
     * @return
     *     returns SPG2800Port
     */
    @WebEndpoint(name = "SPG2800Port")
    public SPG2800Port getSPG2800Port() {
        return super.getPort(SPG2800Port, SPG2800Port.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns SPG2800Port
     */
    @WebEndpoint(name = "SPG2800Port")
    public SPG2800Port getSPG2800Port(WebServiceFeature... features) {
        return super.getPort(SPG2800Port, SPG2800Port.class, features);
    }

}
